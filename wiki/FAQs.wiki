#summary Frequently asked questions

----

  * *Why is the @DataModelSelection property annotated with @Out and not @In? (golftips example)*

  The @DataModelSelection is a variation of the @In annotation. The @Out annotation turns around and pushes the selected item injected by @DataModelSelection back out into a context as a top-level variable. Without @Out, the selection would only be available while the method is executing.

  * *I get an error when using @RequestParameter on a field with a primitive type. Why?*

  The @RequestParameter annotation does not require a value by default (in fact, there isn't even a setting). If the request parameter is missing, Seam will attempt to assign a null value to the field. If the field is a primitive type, Seam will be unable to perform the assignment in this case and, as a result, an error will be thrown.

  Therefore, if the field you are adding the @RequestParameter annotation to is a primitive type (e.g. int), change the field type to a primitive wrapper class (e.g. Integer). You will then have to be prepared for a null value, but that you can handle in your business logic.

  * *When do I use @Remove and @Destroy on a SFSB?*

  In Seam 2, if you have exactly one @Remove method, it's automatically made the @Destroy method. If you have multiple @Remove methods, you need @Destroy. Also @Remove @Destroy methods must have no parameters.

  * *How does the default locale work? When is it used?*

  The answer can be found on the [http://seamframework.org/Documentation/HowDoesTheDefaultLocaleWorkWhenIsItUsed Seam Wiki].

  * *Why do the collections on the entities in the sample application appear more than once?*

  This problem is related to the hibernate.hbm2ddl.auto setting. If the option is set to "none" (and the database is replaced with the initial one from the sample code download) no duplicate mappings are present. If the setting is set to "update", then generate creates duplicate mappings after the next server restart.

  It is actually a bug in Hibernate that I am trying to get corrected [http://opensource.atlassian.com/projects/hibernate/browse/HHH-3532 HHH-3532]. It just doesn't detect the foreign keys correctly and keeps creating them over and over.

  This issue has really bitten me hard and made setting up the sample application a little harder than it had to be. A workaround is to go into the tables and delete the duplicate foreign keys.