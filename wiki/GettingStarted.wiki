#summary Instructions for getting started with the sample application
#labels Featured

== Introduction ==

First of all, I encourage you (read as "urge you") to [http://www.manning.com/affiliate/idevaffiliate.php?id=647 purchase] the book to get all of the gory details on how to set up, develop, and deploy the sample application. That being said, even with the book, there is going to be extra information that I am going to want to relate to you. I will do that on this wiki, starting with this introductory page.

== Prerequisites ===

  * Java SE Development Kit (JDK) 5.0 or better
  * JBoss Application Server (AS) 4.2.2.GA
  * JBoss Seam 2.0.0.GA or better
  * Apache Ant 1.7.0 (required depending on usage)
  * IDE - Eclipse, NetBeans, or IntelliJ IDEA

== Obtaining the source code ==

For each formal review and the final manuscript, there will be an official download bundle that you can retrieve from this project. However, until the final manuscript is ready, your best bet to grab the source from SVN. Part of the reason is that Seam is a fast moving project. Just trying to write about it and keep the example source code up to date has been quite a challenge.

You can find out how to check out the project from SVN by clicking on the [http://code.google.com/p/seaminaction/source Source] tab.

== Layout of the source code ==

This section gives an overview of the project layout and makes a recommendation for how to organize it on your harddrive so that you can match as close as possible to the assumptions made in the book.

=== The directory you call "home" ===

Your home directory is your development root. If this happens to be your operating system home directory, then the last path in the directory is typically the same as your username. The book uses the home directory of a fictional developer, Tommy Twoputt, whose username is twoputt. Whenever an absolute path must be referenced in the manuscript, the directory /home/twoputt is used.

http://seaminaction.googlecode.com/svn/wiki/images/twoputt-avatar.png

The table below shows the home directory for twoputt as it would appear on several different operating systems. Whenever you see twoputt's home directory used in the book, replace it with your own home directory.

|| *Operating system* || *Home area* ||
|| Linux || /home/twoputt ||
|| Max OSX || /Users/twoputt ||
|| Windows || C:/twoputt ||

You can of course choose your own working directory. Here I attempt only to cite the default directory paths used by the sample code.

Notice the forward slash for Windows systems. Backslash (\) is an escape character in Java. Fortunately, Java transposes the slash according to the system it is running on, so you can sidestep use of the backslash (and hence its dual purpose) by always using forward slashes in paths.

Within the text, the home directory will be referred to as ${user.home} to make it generic across systems. The terminal output included in the listings has been generated on a Linux system, but you can look beyond this detail since it makes no difference which operating system you use for developing Seam applications.

=== Structuring your home ===

I make recommendations about where to put libraries and how to organize your development space. You don't have to take these recommendations. But being a reader, I have always found source code distributions from books to be cold and disconnected.

As you add new software, your home area can very quickly become chaotic. To help you keep things in order, I recommend a structure that I adhere to throughout the book. The table below lists several folders, along with their purpose, that I like to set up when doing development. You will recognize these directories from the book's source code.

|| *Folder* || *What it contains* ||
|| databases || File-based databases for H2 ||
|| etc || Database scripts, extra configuration files ||
|| lib || JAR files not included with Seam, such as H2 driver ||
|| opt || Directory where third-party applications are extracted, such as JBoss AS and Seam ||
|| projects || Working development directory while studying a stage ||
|| prototype || My working version of the applications ||
|| stages || Snapshot of projects and databases at the end of each chapter ||

Appendix A shows you how to get all of the software installed that is needed to use the examples in this book, including Seam. After all of the downloading is complete, your home directory should contain the directories listed in table below, populated with the required software:

{{{
twoputt/
|-- databases/
|   `-- open18-db/
|-- lib/
|   `-- h2.jar
|-- opt/
|   |-- apache-ant-1.7.0/
|   |-- glassfish-v2/
|   |-- jboss-as-4.2.2.GA/
|   `-- jboss-seam-2.0.1.CR1/
`-- projects/
    `-- open18/
}}}

The location of individual applications will be referred to throughout the book using a variable notion. For instance, the JBoss AS directory is tokenized as ${jboss.home} and the Seam distribution as ${seam.dist}.

== Developing the source code ==

This section describes how to get started with developing the source code provided.

=== Starting from scratch ===

Chapter 2 takes you from an existing database schema to a working prototype. To follow along, you must first create and seed the database. The sample application uses the [http://h2database.com H2 database], which is the second generation of HSQLDB. I believe that this database is the best choice for prototyping because it is robust, fast, and does not require installation (at the system level).

Information about how to create the database is documented in the README.txt file. However, I will also include instructions here. Run the following two commands to setup the database for Open 18.

{{{
java -cp lib/h2.jar org.h2.tools.RunScript -url jdbc:h2:file:databases/open18-db/h2 -user open18 -password tiger -script etc/schema/open18-initial-schema.sql
java -cp lib/h2.jar org.h2.tools.RunScript -url jdbc:h2:file:databases/open18-db/h2 -user open18 -password tiger -script etc/schema/open18-seed-data.sql
}}}

Alternatively, you can extract the database I have prepared.

{{{
unzip -d databases etc/schema/open18-db-initial-seeded.zip
}}}

Again, the database is all you need to follow along with the book. You can read about the database schema on the DatabaseSchema page.

Instead of creating the project from scratch, you may want to skip ahead and take advantage of the staged project snapshots.

=== Inflating the staged projects ===

Once you have the source code checked out, you must "inflate" the project. I had to do this because Seam is a large project and the download would be out of control if I included all of the JAR files. The script I put together draws the necessary files from the Seam distribution into the proper place in the project.

The inflating is handled by an Ant build script at the root of the source tree. You run the following command to inflate all of the stages.

{{{
ant inflate-all
}}}

You can also inflate a single phase by passing in the location of the project

{{{
ant -Dproject.home=/home/twoputt/stages/projects-ch02/open18
}}}

Of course, if you follow along with chapter 2, you actually don't start with the stages but rather from an existing database and a blank project workspace.