===== listing-2.01.stdout =====

  [echo] Welcome to seam-gen :-)
  [input] Enter your Java project workspace (the directory that
[CA]contains your Seam projects) [C:/Projects] [C:/Projects]
/home/twoputt/projects
  [input] Enter your JBoss home directory [C:/Program
[CA]Files/jboss-4.2.0.GA] [C:/Program Files/jboss-4.2.0.GA]
/home/twoputt/opt/jboss-as-4.2.1.GA
  [input] Enter the project name [myproject] [myproject]
open18
  [echo] Accepted project name as: open18
  [input] Select a RichFaces skin (not applicable if using ICEFaces)
[CA][blueSky] ([blueSky], classic, ruby, wine, deepMarine, emeraldTown,
[CA]sakura, DEFAULT)
<ENTER>
  [input] Is this project deployed as an EAR (with EJB components)
[CA]or a WAR (with no EJB support) [ear]  ([ear], war, )          #1
war
  [input] Enter the Java package name for your session beans      #2
[CA][com.mydomain.open18] [com.mydomain.open18]
org.open18.action
  [input] Enter the Java package name for your entity beans
[CA][org.open18.action] [org.open18.action]
org.open18.model
  [input] Enter the Java package name for your test cases
[CA][org.open18.action.test] [org.open18.action.test]
org.open18.test
  [input] What kind of database are you using? [hsql]  ([hsql],
[CA]mysql, oracle, postgres, mssql, db2, sybase, enterprisedb, h2)
h2
  [input] Enter the Hibernate dialect for your database
[CA][org.hibernate.dialect.H2Dialect]
[CA][org.hibernate.dialect.H2Dialect]
<ENTER>
  [input] Enter the filesystem path to the JDBC driver jar
[CA][lib/h2.jar] [lib/h2.jar]
/home/twoputt/lib/h2.jar
  [input] Enter JDBC driver class for your database
[CA][org.h2.Driver] [org.h2.Driver]
<ENTER>
  [input] Enter the JDBC URL for your database [jdbc:h2:.]
[CA][jdbc:h2:.]
jdbc:h2:file:/home/twoputt/databases/open18-db/h2                 #3
  [input] Enter database username [sa] [sa]
open18                                                            #4
  [input] Enter database password [] []
tiger                                                             #4
  [input] Enter the database schema name (it is OK to leave this
[CA]blank) [] []
PUBLIC                                                            #5
  [input] Enter the database catalog name (it is OK to leave this
[CA]blank) [] []
H2                                                                #6
  [input] Are you working with tables that already exist in the
[CA]database? [n]  (y, [n], )
y
  [input] Do you want to drop and recreate the database tables and
[CA]data in import.sql each time you deploy? [n]  (y, [n], )
n
  [input] Enter your ICEfaces home directory (leave blank to omit
[CA]ICEfaces) [] []
<ENTER>
[propertyfile] Creating new property file:
[CA]/home/twoputt/opt/jboss-seam-2.0.0.GA/seam-gen/build.properties
   [echo] Installing JDBC driver jar to JBoss server
   [copy] Copying 1 file to
[CA]/home/twoputt/opt/jboss-as-4.2.1.GA/server/default/lib

  [echo] Type 'seam create-project' to create the new project

BUILD SUCCESSFUL

===== listing-2.02.stdout =====

create-project:
  [echo] A new Seam project named 'open18' was created in the
[CA]/home/twoputt/projects directory
  [echo] Type 'seam explode' and go to http://localhost:8080/open18
  [echo] Eclipse Users: Add the project into Eclipse using File >
[CA]New > Project and select General > Project (not Java Project)
  [echo] NetBeans Users: Open the project in NetBeans

BUILD SUCCESSFUL

===== listing-2.03.stdout =====

...
generate-model:

  [echo] Reverse engineering database using JDBC driver
[CA]/home/twoputt/lib/h2.jar
  [echo] project=/home/twoputt/projects/open18
  [echo] model=org.open18.model
[hibernate] Executing Hibernate Tool with a JDBC Configuration (for
[CA]reverse engineering)
[hibernate] 1. task: hbm2java (Generates a set of .java files)
...
[hibernate] INFO: Hibernate Tools 3.2.0.CR1
[javaformatter] Java formatting of 8 files completed. Skipped 0
[CA]file(s).

generate-ui:
  [echo] Building project 'open18' to generate views and controllers

...
[hibernate] Executing Hibernate Tool with a JPA Configuration
[hibernate] 1. task: generic exporter... view/list.xhtml.ftl
...
[hibernate] 2. task: generic exporter... view/view.xhtml.ftl
[hibernate] 3. task: generic exporter... view/view.page.xml.ftl
[hibernate] 4. task: generic exporter... view/edit.xhtml.ftl
[hibernate] 5. task: generic exporter... view/edit.page.xml.ftl
[hibernate] 6. task: generic exporter... src/EntityList.java.ftl
[hibernate] 7. task: generic exporter... view/list.page.xml.ftl
[hibernate] 8. task: generic exporter... src/EntityHome.java.ftl
[hibernate] 9. task: generic exporter... view/layout/menu.xhtml.ftl
[javaformatter] Java formatting of 15 files completed. Skipped 0
[CA]file(s).
  [echo] Type 'seam restart' and go to http://localhost:8080/open18

generate:

BUILD SUCCESSFUL

===== listing-2.04.xml =====

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering SYSTEM
  "http://hibernate.sourceforge.net/
[CA]hibernate-reverse-engineering-3.0.dtd">
<hibernate-reverse-engineering>
  <table name="HOLE">
    <column name="M_PAR" property="mensPar" />
    <column name="L_PAR" property="ladiesPar" />
    <column name="M_HANDICAP" property="mensHandicap" />
    <column name="L_HANDICAP" property="ladiesHandicap" />
  </table>
  <table name="TEE_SET">
    <meta attribute="extra-import">javax.persistence.Transient</meta>
    <meta attribute="class-code">
@Transient
public int getFrontNineDistance() {
    int distance = 0;
    for (Tee tee : tees) {
        if (tee.getHole().getNumber() &lt;= 9) {
            distance += tee.getDistance();
        }
    }
    return distance;
}

@Transient
public int getBackNineDistance() {
    int distance = 0;
    for ( Tee tee : tees ) {
        if ( tee.getHole().getNumber() > 9 ) {
            distance += tee.getDistance();
        }
    }
    return distance;
}   
    </meta>
    <column name="POS" property="position" />
    <column name="M_SLOPE_RATING" property="mensSlopeRating" />
    <column name="M_COURSE_RATING" property="mensCourseRating" />
    <column name="L_SLOPE_RATING" property="ladiesSlopeRating" />
    <column name="L_COURSE_RATING" property="ladiesCourseRating" />
  </table>
</hibernate-reverse-engineering>

===== listing-2.05.xml =====

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering SYSTEM
  "http://hibernate.sourceforge.net/
[CA]hibernate-reverse-engineering-3.0.dtd">
<hibernate-reverse-engineering>

  <table-filter
    match-schema="EQUIPMENT" match-name="PRDCT" exclude="false" />
  <table-filter
    match-schema="EQUIPMENT" match-name="MFR" exclude="false" />
  <table-filter
    match-schema="EQUIPMENT" match-name="EQ_TYP" exclude="false" />

  <table name="EQ_TYP" class="org.open18.model.EquipmentType" />

  <table name="PRDCT" class="org.open18.model.Product">
    <foreign-key foreign-table="MFR">
      <column-ref local-column="MFR_ID" foreign-column="ID" />
      <!-- many-to-one/set overrides do not work! -->
      <many-to-one property="brand" />
    </foreign-key>
    <foreign-key foreign-table="EQ_TYP">
      <column-ref local-column="EQ_TYP_ID" foreign-column="ID" />
      <!-- many-to-one/set overrides do not work! -->
      <many-to-one property="type" />
      <set exclude="true" />
    </foreign-key>
  </table>

  <table name="MFR" class="org.open18.model.Manufacturer" />

</hibernate-reverse-engineering>

===== listing-2.06.snippet =====

public String getOrder() {
    if (super.getOrder() == null) {
        setOrder("name asc");
    }
    return super.getOrder();
}

===== listing-2.07.stdout =====

00:00:00,385 INFO  [Initialization] redeploying
00:00:00,395 INFO  [Scanner] scanning:
/home/twoputt/opt/jboss-as-4.2.1.GA/server/default/deploy
[CA]/open18.war/WEB-INF/dev
00:00:00,424 INFO  [Initialization] Installing components...
...
00:00:00,720 INFO  [Component] Component: courseList, scope: EVENT,
type: JAVA_BEAN, class: org.open18.action.CourseList
...
00:00:00,491 INFO  [Initialization] done redeploying

===== listing-2.08.tree =====

open18/
|-+ bootstrap/                                 #1
|-+ exploded-archives/                         #2
|-+ lib/                                       #3
|-+ nbproject/                                 #4
|-- resources/
|   |-- META-INF/
|   |   |-- persistence-dev-war.xml            #5
|   |   |-- persistence-prod-war.xml           #5
|   |   `-- persistence-test-war.xml           #5
|   |-- WEB-INF/
|   |   |-- components.xml                     #6
|   |   |-- faces-config.xml
|   |   |-- jboss-web.xml
|   |   |-- pages.xml                          #7
|   |   `-- web.xml
|   |-- components.properties                  #8
|   |-- import-dev.sql
|   |-- import-prod.sql
|   |-- import-test.sql
|   |-- messages_<lang>.properties             #9
|   |-- open18-dev-ds.xml                      #10
|   |-- open18-prod-ds.xml                     #10
|   |-- seam-gen.reveng.xml
|   |-- seam.properties                        #11
|   `-- security.drl
|-- src/
|   |-+ action/                                #12
|   |-+ model/                                 #13
|   `-+ test/
|-- view/
|   |-+ img/
|   |-+ layout/
|   |-+ stylesheet/
|   |-- <entity>.page.xml                      #14
|   |-- <entity>.xhml                          #14
|   |-- <entity>List.page.xml                  #15
|   |-- <entity>List.xhml                      #15
|   |-- error.xhtml
|   |-- home.xhtml
|   |-- index.html
|   |-- login.page.xml
|   `-- login.xhtml
|-- .classpath                                 #16
|-- .project                                   #16
|-- build-dev.properties                       #17
|-- build-prod.properties                      #17
|-- build.properties                           #18
|-- build.xml                                  #19
|-- explode.launch
|-- hibernate-console.properties
`-- open18.launch

===== listing-2.09.snippet =====

public List<Hole> getHoles() {
    if (getInstance() == null) {
        return null;
    }

    List<Hole> holes =
        new ArrayList<Hole>(getInstance().getHoles());
    Collections.sort(holes, new Comparator<Hole>() {
        public int compare(Hole a, Hole b) {
            return Integer.valueOf(a.getNumber())
                .compareTo(Integer.valueOf(b.getNumber()));
        }
    });

    return holes;
}

public List<TeeSet> getTeeSets() {
    if (getInstance() == null) {
        return null;
    }

    List<TeeSet> teeSets =
        new ArrayList<TeeSet>(getInstance().getTeeSets());
    Collections.sort(teeSets, new Comparator<TeeSet>() {

        public int compare(TeeSet a, TeeSet b) {
            return a.getPosition() == null ||
                b.getPosition() == null ? 0 :
                a.getPosition().compareTo(b.getPosition());
        }

    });

    return teeSets;
}

===== listing-2.10.xml =====

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE resources PUBLIC "-//Sun Microsystems, Inc.//DTD Application
[CA]Server 9.0 Resource Definitions //EN"
  "http://www.sun.com/software/appserver/dtds/sun-resources_1_3.dtd">
<resources>
  <jdbc-connection-pool
    name="open18Pool" 
    datasource-classname="org.h2.jdbcx.JdbcDataSource"
    res-type="javax.sql.DataSource">
    <property name="user" value="open18"/>
    <property name="password" value="tiger"/>
    <property name="url"
      value="jdbc:h2:file:/home/twoputt/databases/open18-db/h2"/>
  </jdbc-connection-pool>
  <jdbc-resource
    jndi-name="open18Datasource"
    pool-name="open18Pool"
    enabled="true"
    object-type="user"/>
</resources>

===== listing-2.11.xml =====

<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
    http://java.sun.com/xml/ns/persistence 
    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd" 
  version="1.0">
  <persistence-unit name="open18" transaction-type="JTA">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    <jta-data-source>open18Datasource</jta-data-source>                #1
    <properties>
      <property name="hibernate.dialect"
       value="org.hibernate.dialect.H2Dialect"/>
      <property name="hibernate.hbm2ddl.auto" value="validate"/>
      <property name="hibernate.show_sql" value="true"/>
      <property name="hibernate.format_sql" value="true"/>
      <property name="hibernate.transaction.manager_lookup_class"
[CA]value="org.hibernate.transaction.SunONETransactionManagerLookup"/> #2
    </properties>
  </persistence-unit>
</persistence>

===== listing-2.un#01.bash =====

java -cp /home/twoputt/lib/h2.jar org.h2.tools.Server -web

===== listing-2.un#02.bash =====

java -cp /home/twoputt/lib/h2.jar org.h2.tools.Console

===== listing-2.un#03.xhtml =====

<rich:tab label="teeSets">
...
  <rich:dataTable
             value="#{courseHome.teeSets}" 
                var="teeSet" 
       rendered="#{not empty courseHome.teeSets}" 
    rowClasses="rvgRowOne,rvgRowTwo"
                   id="teeSetsTable">
    ...
    <h:column>
      <f:facet name="header">color</f:facet>
      <div style="background-color: #{teeSet.color}; height: 1em; 
[CA]width: 1em; outline: 1px solid black; margin: 0 auto;" />
    </h:column>
    ...
  </rich:dataTable>
...
</rich:tab>

